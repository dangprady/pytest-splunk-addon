
EventGen Template 
============================

[Sample_with_wildcard]
ingest_type = mod_input, scripted_input, syslog, file_monitoring



EventGenerator
1. Parse Eventgen 
2. Parse Samples 
3. Tokenize Samples 
4. Return list 


Parse Samples 
---------------
Get list of files in samples folder 
- Check on which eventgen stanza it is falling. 




-------------------------------------------------------------------------
[ModInput: HEC:event] Each line of sample file is an event:
Sample -> [Event, Event] -> Sample Parser -> Tokenize -> Ingestor -> Splunk
-------------------------------------------------------------------------
[Scripted input, file monitoring : HEC:Raw] All line of sample is one event 
Sample -> [Event] -> Sample Parser -> Tokenize -> Ingestor -> Splunk 
--------------------------------------------------------------------------
replacementType = all
Sample -> [Event] -> Sample Parser -> Tokenize A-> Ingestor -> Splunk
                                   -> Tokenize B-> Ingestor -> Splunk
                                   -> Tokenize C-> Ingestor -> Splunk
--------------------------------------------------------------------------
[ModInput] replacementType = all
Sample -> [Event#A,B,C, Event# A,B,C] -> Sample Parser -> Tokenize -> Ingestor -> Splunk
                                          -> Tokenize -> Ingestor -> Splunk
--------------------------------------------------------------------------
Sample Parser ([Event]):
    for each_event in events:
        for value in token.get_value(random=True): # get_value = generator
            token.apply(event)
--------------------------------------------------------------------------
